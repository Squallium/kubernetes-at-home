apiVersion: apps/v1
kind: Deployment
metadata:
  name: warracker
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: warracker
  template:
    metadata:
      labels:
        app: warracker
    spec:
      initContainers:
        - name: copy-ca
          image: alpine:3.18
          command:
            - sh
            - -c
            - cp /tmp/root-ca.crt /ca/root-ca.crt
          volumeMounts:
            - name: trusted-ca
              mountPath: /tmp/root-ca.crt
              subPath: tls.crt
            - name: ca-dir
              mountPath: /ca
      containers:
        - name: warracker
          image: {{ .Values.deployment.image }}
          ports:
            - containerPort: {{ .Values.deployment.containerPort }}
          envFrom:
            - secretRef:
                name: warracker-db
            - secretRef:
                name: warracker-oidc
          env:
            - name: DB_HOST
              value: {{ .Values.postgresql.host | default "warracker-postgres" }}
            - name: DB_PORT
              value: {{ .Values.postgresql.port | quote }}
            - name: DB_NAME
              value: {{ .Values.postgresql.database | quote }}
            - name: DB_USER
              value: {{ .Values.postgresql.username | quote }}
            - name: DB_PASSWORD
              value: {{ .Values.postgresql.password | quote }}
            {{- if .Values.deployment.oidc.enabled }}
            - name: OIDC_ENABLED
              value: "true"
            - name: OIDC_PROVIDER_NAME
              value: {{ .Values.deployment.oidc.providerName }}
            - name: OIDC_ISSUER_URL
              value: {{ .Values.deployment.oidc.issuerUrl | quote }}
            - name: OIDC_SCOPE
              value: "{{ .Values.deployment.oidc.scope }}"
            {{- end }}
            - name: REQUESTS_CA_BUNDLE
              value: /ca/root-ca.crt
            - name: CURL_CA_BUNDLE
              value: /ca/root-ca.crt
            {{- range $key, $value := .Values.deployment.additionalEnv }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          volumeMounts:
            - mountPath: /data/uploads
              name: uploads-storage
            - name: trusted-ca
              mountPath: /usr/local/share/ca-certificates/root-ca.crt
              subPath: tls.crt
            - name: ca-dir
              mountPath: /ca
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          command: [ "/bin/sh", "-c" ]
          args:
            - update-ca-certificates && exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
      volumes:
        - name: uploads-storage
          persistentVolumeClaim:
            claimName: warracker-uploads-pvc
        - name: trusted-ca
          secret:
            secretName: warracker-trusted-ca
        - name: ca-dir
          emptyDir: {}
