apiVersion: apps/v1
kind: Deployment
metadata:
  name: warracker-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: warracker-postgres
  template:
    metadata:
      labels:
        app: warracker-postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgresql.image }}
          ports:
            - containerPort: {{ .Values.postgresql.servicePort }}
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.user | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.password | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.database | quote }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-storage
          {{- include "chart.resources" (dict "name" "postgresql" "Values" .Values) | nindent 10 }}
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: warracker-postgres-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: warracker-postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgresql.storage }}
---
apiVersion: v1
kind: Service
metadata:
  name: warracker-postgres
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.postgresql.servicePort }}
      targetPort: {{ .Values.postgresql.servicePort }}
  selector:
    app: warracker-postgres
