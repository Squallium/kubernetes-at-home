apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentik-redis
spec:
  selector:
    matchLabels:
      app: authentik-redis
  template:
    metadata:
      labels:
        app: authentik-redis
    spec:
      containers:
        - name: redis
          image: {{ .Values.redis.image }}
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redisdata
              mountPath: /data
          {{- if .Values.redis.secretName }}
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.secretName }}
                  key: password
          command: [ "sh", "-c" ]
          args:
            - redis-server --requirepass "$REDIS_PASSWORD"
          {{- end }}
          {{- include "chart.resources" (dict "name" "redis" "Values" .Values) | nindent 10 }}
      volumes:
        - name: redisdata
          persistentVolumeClaim:
            claimName: authentik-redis-pvc
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: authentik-redis-pv
spec:
  capacity:
    storage: {{ .Values.redis.storage }}
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: {{ .Values.redis.storagePath }}
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: authentik-redis-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: manual
  resources:
    requests:
      storage: {{ .Values.redis.storage }}
---
apiVersion: v1
kind: Service
metadata:
  name: authentik-redis
spec:
  selector:
    app: authentik-redis
  ports:
    - protocol: TCP
      port: 6379
