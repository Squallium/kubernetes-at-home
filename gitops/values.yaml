argocd-apps:
  # -- Deploy Argo CD Applications within this helm release
  # @default -- `{}` (See [values.yaml])
  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/
  applications: {}
#    home-assistant-addons:
#      namespace: argocd
#      additionalLabels: {}
#      additionalAnnotations: {}
#      finalizers:
#      - resources-finalizer.argocd.argoproj.io
#      project: default
#      sources:
#      - repoURL: https://github.com/Squallium/kubernetes-at-home.git
#        targetRevision: main
#        ref: values
#      - repoURL: https://github.com/Squallium/kubernetes-at-home.git
#        path: charts/home-assistant-addons
#        targetRevision: main
#        helm:
#          valueFiles:
#            - $values/apps/home-assistant-addons/values.yaml
#      destination:
#        server: https://kubernetes.default.svc
#        namespace: argocd
#      syncPolicy:
#  #      automated:
#  #        prune: false
#  #        selfHeal: false
#        syncOptions:
#        - CreateNamespace=true
#      revisionHistoryLimit: null
#      ignoreDifferences:
#      - group: apps
#        kind: Deployment
#        jsonPointers:
#        - /spec/replicas
#      info:
#      - name: url
#        value: https://argoproj.github.io/
#  #    minio:
#  #      namespace: argocd
#  #      additionalLabels: {}
#  #      additionalAnnotations: {}
#  #      finalizers:
#  #      - resources-finalizer.argocd.argoproj.io
#  #      project: default
#  #      sources:
#  #      - repoURL: https://github.com/Squallium/kubernetes-at-home.git
#  #        targetRevision: main
#  #        ref: values
#  #      - repoURL: https://charts.min.io/
#  #        chart: minio
#  #        targetRevision: 5.4.0
#  #        helm:
#  #          valueFiles:
#  #            - $values/apps/minio/preview/values.yaml
#  #      destination:
#  #        server: https://kubernetes.default.svc
#  #        namespace: minio
#  #      syncPolicy:
#  #  #      automated:
#  #  #        prune: false
#  #  #        selfHeal: false
#  #        syncOptions:
#  #        - CreateNamespace=true
#  #      revisionHistoryLimit: null
#  #      ignoreDifferences:
#  #      - group: apps
#  #        kind: Deployment
#  #        jsonPointers:
#  #        - /spec/replicas
#  #      info:
#  #      - name: url
#  #        value: https://argoproj.github.io/
  #  guestbook:
  #    namespace: argocd
  #    additionalLabels: {}
  #    additionalAnnotations: {}
  #    finalizers:
  #    - resources-finalizer.argocd.argoproj.io
  #    project: guestbook
  #    source:
  #      repoURL: https://github.com/argoproj/argocd-example-apps.git
  #      targetRevision: HEAD
  #      path: guestbook
  #      directory:
  #        recurse: true
  #    # ArgoCD v2.6 or later
  #    sources:
  #    - chart: elasticsearch
  #      repoURL: https://helm.elastic.co
  #      targetRevision: 8.5.1
  #    - repoURL: https://github.com/argoproj/argocd-example-apps.git
  #      path: guestbook
  #      targetRevision: HEAD
  #    destination:
  #      server: https://kubernetes.default.svc
  #      namespace: guestbook
  #    syncPolicy:
  #      automated:
  #        prune: false
  #        selfHeal: false
  #      syncOptions:
  #      - CreateNamespace=true
  #    revisionHistoryLimit: null
  #    ignoreDifferences:
  #    - group: apps
  #      kind: Deployment
  #      jsonPointers:
  #      - /spec/replicas
  #    info:
  #    - name: url
  #      value: https://argoproj.github.io/

  # -- Deploy Argo CD Projects within this helm release
  # @default -- `{}` (See [values.yaml])
  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/
  projects: {}
  #  guestbook:
  #    namespace: argocd
  #    additionalLabels: {}
  #    additionalAnnotations: {}
  #    permitOnlyProjectScopedClusters: false
  #    finalizers:
  #    - resources-finalizer.argocd.argoproj.io
  #    description: Example Project
  #    sourceRepos:
  #    - '*'
  #    destinations:
  #    - namespace: guestbook
  #      server: https://kubernetes.default.svc
  #    clusterResourceWhitelist: []
  #    clusterResourceBlacklist: []
  #    namespaceResourceBlacklist:
  #    - group: ''
  #      kind: ResourceQuota
  #    - group: ''
  #      kind: LimitRange
  #    - group: ''
  #      kind: NetworkPolicy
  #      orphanedResources: {}
  #      roles: []
  #    namespaceResourceWhitelist:
  #    - group: 'apps'
  #      kind: Deployment
  #    - group: 'apps'
  #      kind: StatefulSet
  #    orphanedResources: {}
  #    roles: []
  #    syncWindows:
  #    - kind: allow
  #      schedule: '10 1 * * *'
  #      duration: 1h
  #      applications:
  #      - '*-prod'
  #      manualSync: true
  #    signatureKeys:
  #    - keyID: ABCDEF1234567890
  #    sourceNamespaces:
  #    - argocd

  # -- Deploy Argo CD ApplicationSets within this helm release
  # @default -- `{}` (See [values.yaml])
  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/
  applicationsets:
    homebox:
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      finalizers:
        - resources-finalizer.argocd.argoproj.io
      # See PR #10026 (ArgoCD v2.5 or later)
      # goTemplate: false
      generators:
        - matrix:
            generators:
              - clusters: {}
              - git:
                  repoURL: https://github.com/Squallium/kubernetes-at-home.git
                  revision: main
                  files:
                    - path: 'apps/homebox/{{metadata.labels.environment}}/values.yaml'
      # Ref https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Controlling-Resource-Modification/#allow-temporarily-toggling-auto-sync
      ignoreApplicationDifferences:
        - jsonPointers:
            - /spec/syncPolicy
      # Progressive Syncs is an experimental feature and it must be explicitly enabled
      # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
      #      strategy:
      #        type: RollingSync
      #        rollingSync:
      #          steps:
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - guestbook
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - kustomize-foo
      #              - kustomize-bar
      template:
        metadata:
          name: 'homebox-{{metadata.labels.environment}}'
          labels:
            type: 'service'
          annotations: {}
        spec:
          project: default
          sources:
            - repoURL: https://github.com/Squallium/kubernetes-at-home.git
              targetRevision: main
              ref: values
            - repoURL: https://github.com/Squallium/kubernetes-at-home.git
              path: charts/homebox
              targetRevision: main
              helm:
                valueFiles:
                  - $values/apps/homebox/{{metadata.labels.environment}}/values.yaml
          destination:
            server: '{{server}}'
            namespace: homebox
          syncPolicy:
#            automated:
#              prune: false
#              selfHeal: false
            syncOptions:
              - CreateNamespace=true
          ignoreDifferences:
            - group: apps
              kind: Deployment
              jsonPointers:
                - /spec/replicas
          info:
            - name: url
              value: https://argoproj.github.io/
      syncPolicy:
        # Set Application finalizer
        preserveResourcesOnDeletion: false
      # Templating is only available on string type
    #      templatePatch: |
    #        spec:
    #          source:
    #            helm:
    #              valueFiles:
    #              {{- range $valueFile := .valueFiles }}
    #                - {{ $valueFile }}
    #              {{- end }}
    #        {{- if .autoSync }}
    #          syncPolicy:
    #            automated:
    #              prune: {{ .prune }}
    #        {{- end }}
    paperless-ngx:
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      finalizers:
        - resources-finalizer.argocd.argoproj.io
      # See PR #10026 (ArgoCD v2.5 or later)
      # goTemplate: false
      generators:
        - matrix:
            generators:
              - clusters: {}
              - git:
                  repoURL: https://github.com/Squallium/kubernetes-at-home.git
                  revision: main
                  files:
                    - path: 'apps/paperless-ngx/{{metadata.labels.environment}}/values.yaml'
      # Ref https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Controlling-Resource-Modification/#allow-temporarily-toggling-auto-sync
      ignoreApplicationDifferences:
        - jsonPointers:
            - /spec/syncPolicy
      # Progressive Syncs is an experimental feature and it must be explicitly enabled
      # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
      #      strategy:
      #        type: RollingSync
      #        rollingSync:
      #          steps:
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - guestbook
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - kustomize-foo
      #              - kustomize-bar
      template:
        metadata:
          name: 'paperless-ngx-{{metadata.labels.environment}}'
          labels:
            type: 'service'
          annotations: {}
        spec:
          project: default
          sources:
            - repoURL: https://github.com/Squallium/kubernetes-at-home.git
              targetRevision: main
              ref: values
            - repoURL: https://github.com/Squallium/kubernetes-at-home.git
              path: charts/paperless-ngx
              targetRevision: main
              helm:
                valueFiles:
                  - $values/apps/paperless-ngx/{{metadata.labels.environment}}/values.yaml
          destination:
            server: '{{server}}'
            namespace: paperless-ngx
          syncPolicy:
#            automated:
#              prune: false
#              selfHeal: false
            syncOptions:
              - CreateNamespace=true
          ignoreDifferences:
            - group: apps
              kind: Deployment
              jsonPointers:
                - /spec/replicas
          info:
            - name: url
              value: https://argoproj.github.io/
      syncPolicy:
        # Set Application finalizer
        preserveResourcesOnDeletion: false
      # Templating is only available on string type
    #      templatePatch: |
    #        spec:
    #          source:
    #            helm:
    #              valueFiles:
    #              {{- range $valueFile := .valueFiles }}
    #                - {{ $valueFile }}
    #              {{- end }}
    #        {{- if .autoSync }}
    #          syncPolicy:
    #            automated:
    #              prune: {{ .prune }}
    #        {{- end }}
    home-assistant:
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      finalizers:
        - resources-finalizer.argocd.argoproj.io
      # See PR #10026 (ArgoCD v2.5 or later)
      # goTemplate: false
      generators:
        - matrix:
            generators:
              - clusters: {}
              - git:
                  repoURL: https://github.com/Squallium/kubernetes-at-home.git
                  revision: main
                  files:
                    - path: 'apps/home-assistant/{{metadata.labels.environment}}/values.yaml'
      # Ref https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Controlling-Resource-Modification/#allow-temporarily-toggling-auto-sync
      ignoreApplicationDifferences:
        - jsonPointers:
            - /spec/syncPolicy
      # Progressive Syncs is an experimental feature and it must be explicitly enabled
      # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
      #      strategy:
      #        type: RollingSync
      #        rollingSync:
      #          steps:
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - guestbook
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - kustomize-foo
      #              - kustomize-bar
      template:
        metadata:
          name: 'home-assistant-{{metadata.labels.environment}}'
          labels:
            type: 'service'
          annotations: {}
        spec:
          project: default
          sources:
            - repoURL: https://github.com/Squallium/kubernetes-at-home.git
              targetRevision: main
              ref: values
            - repoURL: https://pajikos.github.io/home-assistant-helm-chart
              chart: home-assistant
              targetRevision: 0.3.4
              helm:
                valueFiles:
                  - $values/apps/home-assistant/{{metadata.labels.environment}}/values.yaml
          destination:
            server: '{{server}}'
            namespace: home-assistant
          syncPolicy:
#            automated:
#              prune: false
#              selfHeal: false
            syncOptions:
              - CreateNamespace=true
          ignoreDifferences:
            - group: apps
              kind: Deployment
              jsonPointers:
                - /spec/replicas
          info:
            - name: url
              value: https://argoproj.github.io/
      syncPolicy:
        # Set Application finalizer
        preserveResourcesOnDeletion: false
      # Templating is only available on string type
    #      templatePatch: |
    #        spec:
    #          source:
    #            helm:
    #              valueFiles:
    #              {{- range $valueFile := .valueFiles }}
    #                - {{ $valueFile }}
    #              {{- end }}
    #        {{- if .autoSync }}
    #          syncPolicy:
    #            automated:
    #              prune: {{ .prune }}
    #        {{- end }}
    home-assistant-config:
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      finalizers:
        - resources-finalizer.argocd.argoproj.io
      # See PR #10026 (ArgoCD v2.5 or later)
      # goTemplate: false
      generators:
        - matrix:
            generators:
              - clusters: {}
              - git:
                  repoURL: https://github.com/Squallium/kubernetes-at-home.git
                  revision: main
                  files:
                    - path: 'apps/home-assistant/config/{{metadata.labels.environment}}/values.yaml'
      # Ref https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Controlling-Resource-Modification/#allow-temporarily-toggling-auto-sync
      ignoreApplicationDifferences:
        - jsonPointers:
            - /spec/syncPolicy
      # Progressive Syncs is an experimental feature and it must be explicitly enabled
      # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
      #      strategy:
      #        type: RollingSync
      #        rollingSync:
      #          steps:
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - guestbook
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - kustomize-foo
      #              - kustomize-bar
      template:
        metadata:
          name: 'home-assistant-config-{{metadata.labels.environment}}'
          labels:
            type: 'service-config'
          annotations: {}
        spec:
          project: default
          sources:
            - repoURL: https://github.com/Squallium/kubernetes-at-home.git
              targetRevision: main
              ref: values
            - repoURL: https://github.com/Squallium/kubernetes-at-home.git
              path: charts/home-assistant-config
              targetRevision: main
              helm:
                valueFiles:
                  - $values/apps/home-assistant/config/{{metadata.labels.environment}}/values.yaml
          destination:
            server: '{{server}}'
            namespace: home-assistant
          syncPolicy:
#            automated:
#              prune: false
#              selfHeal: false
            syncOptions:
              - CreateNamespace=true
          ignoreDifferences:
            - group: apps
              kind: Deployment
              jsonPointers:
                - /spec/replicas
          info:
            - name: url
              value: https://argoproj.github.io/
      syncPolicy:
        # Set Application finalizer
        preserveResourcesOnDeletion: false
      # Templating is only available on string type
    #      templatePatch: |
    #        spec:
    #          source:
    #            helm:
    #              valueFiles:
    #              {{- range $valueFile := .valueFiles }}
    #                - {{ $valueFile }}
    #              {{- end }}
    #        {{- if .autoSync }}
    #          syncPolicy:
    #            automated:
    #              prune: {{ .prune }}
    #        {{- end }}
    adguard-home:
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      finalizers:
      - resources-finalizer.argocd.argoproj.io
      # See PR #10026 (ArgoCD v2.5 or later)
      # goTemplate: false
      generators:
        - matrix:
            generators:
              - clusters: {}
              - git:
                  repoURL: https://github.com/Squallium/kubernetes-at-home.git
                  revision: main
                  files:
                    - path: 'apps/adguard-home/{{metadata.labels.environment}}/values.yaml'
      # Ref https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Controlling-Resource-Modification/#allow-temporarily-toggling-auto-sync
      ignoreApplicationDifferences:
      - jsonPointers:
        - /spec/syncPolicy
      # Progressive Syncs is an experimental feature and it must be explicitly enabled
      # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
#      strategy:
#        type: RollingSync
#        rollingSync:
#          steps:
#          - matchExpressions:
#            - key: project
#              operator: In
#              values:
#              - guestbook
#          - matchExpressions:
#            - key: project
#              operator: In
#              values:
#              - kustomize-foo
#              - kustomize-bar
      template:
        metadata:
          name: 'adguard-home-{{metadata.labels.environment}}'
          labels:
            type: 'service'
          annotations: {}
        spec:
          project: default
          sources:
          - repoURL: https://github.com/Squallium/kubernetes-at-home.git
            targetRevision: main
            ref: values
          - repoURL: https://github.com/Squallium/kubernetes-at-home.git
            path: charts/adguard-home
            targetRevision: main
            helm:
              valueFiles:
                - $values/apps/adguard-home/{{metadata.labels.environment}}/values.yaml
          destination:
            server: '{{server}}'
            namespace: adguard-home
          syncPolicy:
#            automated:
#              prune: false
#              selfHeal: false
            syncOptions:
              - CreateNamespace=true
          ignoreDifferences:
          - group: apps
            kind: Deployment
            jsonPointers:
            - /spec/replicas
          info:
          - name: url
            value: https://argoproj.github.io/
      syncPolicy:
        # Set Application finalizer
        preserveResourcesOnDeletion: false
      # Templating is only available on string type
    #      templatePatch: |
    #        spec:
    #          source:
    #            helm:
    #              valueFiles:
    #              {{- range $valueFile := .valueFiles }}
    #                - {{ $valueFile }}
    #              {{- end }}
    #        {{- if .autoSync }}
    #          syncPolicy:
    #            automated:
    #              prune: {{ .prune }}
    #        {{- end }}
  #  guestbook:
  #    namespace: argocd
  #    additionalLabels: {}
  #    additionalAnnotations: {}
  #    finalizers:
  #    - resources-finalizer.argocd.argoproj.io
  #    # See PR #10026 (ArgoCD v2.5 or later)
  #    # goTemplate: false
  #    generators:
  #    - git:
  #        repoURL: https://github.com/argoproj/argocd-example-apps.git
  #        revision: HEAD
  #        directories:
  #        - path: guestbook
  #        - path: kustomize-*
  #    # Ref https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Controlling-Resource-Modification/#allow-temporarily-toggling-auto-sync
  #    ignoreApplicationDifferences:
  #    - jsonPointers:
  #      - /spec/syncPolicy
  #    # Progressive Syncs is an experimental feature and it must be explicitly enabled
  #    # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
  #    strategy:
  #      type: RollingSync
  #      rollingSync:
  #        steps:
  #        - matchExpressions:
  #          - key: project
  #            operator: In
  #            values:
  #            - guestbook
  #        - matchExpressions:
  #          - key: project
  #            operator: In
  #            values:
  #            - kustomize-foo
  #            - kustomize-bar
  #    template:
  #      metadata:
  #        name: '{{path.basename}}'
  #        labels:
  #          project: '{{path.basename}}'
  #        annotations: {}
  #      spec:
  #        project: default
  #        source:
  #          repoURL: https://github.com/argoproj/argocd-example-apps.git
  #          targetRevision: HEAD
  #          path: '{{path}}'
  #        destination:
  #          server: https://kubernetes.default.svc
  #          namespace: default
  #        syncPolicy:
  #          automated:
  #            prune: false
  #            selfHeal: false
  #        ignoreDifferences:
  #        - group: apps
  #          kind: Deployment
  #          jsonPointers:
  #          - /spec/replicas
  #        info:
  #        - name: url
  #          value: https://argoproj.github.io/
  #    syncPolicy:
  #      # Set Application finalizer
  #      preserveResourcesOnDeletion: false
  #    # Templating is only available on string type
  #    templatePatch: |
  #      spec:
  #        source:
  #          helm:
  #            valueFiles:
  #            {{- range $valueFile := .valueFiles }}
  #              - {{ $valueFile }}
  #            {{- end }}
  #      {{- if .autoSync }}
  #        syncPolicy:
  #          automated:
  #            prune: {{ .prune }}
  #      {{- end }}

  # --  Deploy Argo CD Applications/ApplicationSets/Projects within this helm release
  # @default -- `[]` (See [values.yaml])
  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/
  itemTemplates: []
  # - items:
  #     - name: my-appset
  #       generators: &generators
  #         - list:
  #             elements:
  #               - cluster: engineering-dev
  #                 url: https://1.2.3.4
  #               - cluster: engineering-prod
  #                 url: https://2.4.6.8
  #               - cluster: finance-preprod
  #                 url: https://9.8.7.6
  #   template:
  #     apiVersion: argoproj.io/v1alpha1
  #     kind: ApplicationSet
  #     metadata:
  #       name: "{{ .name }}"
  #     spec:
  #       generators: *generators
  #       template:
  #         metadata:
  #           name: "{{`{{cluster}}`}}-guestbook"
  #         spec:
  #           project: my-project
  #           source:
  #             repoURL: https://github.com/infra-team/cluster-deployments.git
  #             targetRevision: HEAD
  #             path: guestbook/{{`{{cluster}}`}}
  #           destination:
  #             server: "{{`{{cluster}}`}}"
  #             namespace: guestbook
  # - items:
  #     - name: my-appset
  #       generators:
  #         - list:
  #             elements:
  #               - cluster: engineering-dev
  #                 url: https://1.2.3.4
  #               - cluster: engineering-prod
  #                 url: https://2.4.6.8
  #               - cluster: finance-preprod
  #                 url: https://9.8.7.6
  #   template: |-
  #     apiVersion: argoproj.io/v1alpha1
  #     kind: ApplicationSet
  #     metadata:
  #       name: {{ .name }}
  #     spec:
  #       generators: {{ toYaml .generators | nindent 4 }}
  #       template:
  #         metadata:
  #           name: '{{`{{cluster}}`}}-guestbook'
  #         spec:
  #           project: my-project
  #           source:
  #             repoURL: https://github.com/infra-team/cluster-deployments.git
  #             targetRevision: HEAD
  #             path: guestbook/{{`{{cluster}}`}}
  #           destination:
  #             server: '{{`{{cluster}}`}}'
  #             namespace: guestbook

  # -- DEPRECATED - Please refer [Deprecation Notice](https://github.com/argoproj-labs/argocd-extensions?tab=readme-ov-file#deprecation-notice) for more info.
  # @default -- `{}` (See [values.yaml])
  ## This function in tech preview stage, do expect unstability or breaking changes in newer versions. Bump image.tag if necessary.
  ## Ref: https://github.com/argoproj-labs/argocd-extensions
  extensions: {}
  #  example:
  #    namespace: argocd
  #    additionalLabels: {}
  #    additionalAnnotations: {}
  #    sources:
  #      - git:
  #          url: https://github.com/argoproj-labs/argocd-example-extension.git
  #      - web:
  #          url: https://github.com/argoproj-labs/argocd-example-extension/releases/download/v0.1.0/extension.tar
