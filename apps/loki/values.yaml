deploymentMode: SingleBinary

global:
  extraEnvFrom:
    - secretRef:
        name: loki
#global:
#  extraEnv:
#    - name: LOKI_S3_ACCESS_KEY
#      valueFrom:
#        secretKeyRef:
#          name: loki
#          key: s3-access-key
#    - name: LOKI_S3_SECRET_KEY
#      valueFrom:
#        secretKeyRef:
#          name: loki
#          key: s3-secret-key

loki:
  configStorageType: Secret
  auth_enabled: false
  limits_config:
    reject_old_samples: false
  useTestSchema: true
  commonConfig:
    replication_factor: 1
  storage:
    type: s3
    bucketNames:
      chunks: loki
      ruler: loki
      admin: loki
    s3:
      s3: loki
      endpoint: minio.internal:9000
      accessKeyId: ${LOKI_S3_ACCESS_KEY}
      secretAccessKey: ${LOKI_S3_SECRET_KEY}
      insecure: true
      s3ForcePathStyle: true
  storage_config:
    aws:
      s3: s3://${LOKI_S3_ACCESS_KEY}:${LOKI_S3_SECRET_KEY}@minio.internal:9000/loki
      s3forcepathstyle: true

chunksCache:
  enabled: false

singleBinary:
  enabled: true
  autoscaling:
    enabled: true
  persistence:
    storageClass: microk8s-hostpath

write:
  replicas: 0
read:
  replicas: 0
backend:
  replicas: 0
#ingester:
#  replicas: 0
#distributor:
#  replicas: 0
#querier:
#  replicas: 0