postgresql:
  enabled: false

redis:
  enabled: false

authentik:
  postgresql:
    # -- set the postgresql hostname to talk to
    # if unset and .Values.postgresql.enabled == true, will generate the default
    # @default -- `{{ .Release.Name }}-postgresql`
    host: "{{ .Release.Name }}-postgresql"
    # -- postgresql Database name
    # @default -- `authentik`
    name: "authentik"
    # -- postgresql Username
    # @default -- `authentik`
    user: "authentik"
    password: ""
    port: 5432
  redis:
    # -- set the redis hostname to talk to
    # @default -- `{{ .Release.Name }}-redis-master`
    host: "{{ .Release.Name }}-redis-master"
    password: ""

server:
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: home-internal-ca-issuer
    hosts:
      - auth-dev.internal.org
    tls:
      - secretName: auth-dev-tls
        hosts:
          - auth-dev.internal.org
  envFrom:
    - secretRef:
        name: authentik-env
#  volumes:
#    - name: postgres-creds
#      secret:
#        secretName: authentik-postgres
#  volumeMounts:
#    - name: postgres-creds
#      mountPath: /postgres-creds
#      readOnly: true
worker:
  envFrom:
    - secretRef:
        name: authentik-env
#  volumes:
#    - name: postgres-creds
#      secret:
#        secretName: authentik-postgres
#  volumeMounts:
#    - name: postgres-creds
#      mountPath: /postgres-creds
#      readOnly: true

