argocd-apps:
  # -- Deploy Argo CD Applications within this helm release
  # @default -- `{}` (See [values.yaml])
  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/
  #  applications:
  #    minio:
  #      namespace: argocd
  #      additionalLabels: {}
  #      additionalAnnotations: {}
  #      finalizers:
  #      - resources-finalizer.argocd.argoproj.io
  #      project: default
  #      sources:
  #      - repoURL: https://github.com/Squallium/kubernetes-at-home.git
  #        targetRevision: main
  #        ref: values
  #      - repoURL: https://charts.min.io/
  #        chart: minio
  #        targetRevision: 5.4.0
  #        helm:
  #          valueFiles:
  #            - $values/apps/minio/preview/values.yaml
  #      destination:
  #        server: https://kubernetes.default.svc
  #        namespace: minio
  #      syncPolicy:
  #  #      automated:
  #  #        prune: false
  #  #        selfHeal: false
  #        syncOptions:
  #        - CreateNamespace=true
  #      revisionHistoryLimit: null
  #      ignoreDifferences:
  #      - group: apps
  #        kind: Deployment
  #        jsonPointers:
  #        - /spec/replicas
  #      info:
  #      - name: url
  #        value: https://argoproj.github.io/
  #  guestbook:
  #    namespace: argocd
  #    additionalLabels: {}
  #    additionalAnnotations: {}
  #    finalizers:
  #    - resources-finalizer.argocd.argoproj.io
  #    project: guestbook
  #    source:
  #      repoURL: https://github.com/argoproj/argocd-example-apps.git
  #      targetRevision: HEAD
  #      path: guestbook
  #      directory:
  #        recurse: true
  #    # ArgoCD v2.6 or later
  #    sources:
  #    - chart: elasticsearch
  #      repoURL: https://helm.elastic.co
  #      targetRevision: 8.5.1
  #    - repoURL: https://github.com/argoproj/argocd-example-apps.git
  #      path: guestbook
  #      targetRevision: HEAD
  #    destination:
  #      server: https://kubernetes.default.svc
  #      namespace: guestbook
  #    syncPolicy:
  #      automated:
  #        prune: false
  #        selfHeal: false
  #      syncOptions:
  #      - CreateNamespace=true
  #    revisionHistoryLimit: null
  #    ignoreDifferences:
  #    - group: apps
  #      kind: Deployment
  #      jsonPointers:
  #      - /spec/replicas
  #    info:
  #    - name: url
  #      value: https://argoproj.github.io/

  # -- Deploy Argo CD Projects within this helm release
  # @default -- `{}` (See [values.yaml])
  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/
  projects: {}
  #  guestbook:
  #    namespace: argocd
  #    additionalLabels: {}
  #    additionalAnnotations: {}
  #    permitOnlyProjectScopedClusters: false
  #    finalizers:
  #    - resources-finalizer.argocd.argoproj.io
  #    description: Example Project
  #    sourceRepos:
  #    - '*'
  #    destinations:
  #    - namespace: guestbook
  #      server: https://kubernetes.default.svc
  #    clusterResourceWhitelist: []
  #    clusterResourceBlacklist: []
  #    namespaceResourceBlacklist:
  #    - group: ''
  #      kind: ResourceQuota
  #    - group: ''
  #      kind: LimitRange
  #    - group: ''
  #      kind: NetworkPolicy
  #      orphanedResources: {}
  #      roles: []
  #    namespaceResourceWhitelist:
  #    - group: 'apps'
  #      kind: Deployment
  #    - group: 'apps'
  #      kind: StatefulSet
  #    orphanedResources: {}
  #    roles: []
  #    syncWindows:
  #    - kind: allow
  #      schedule: '10 1 * * *'
  #      duration: 1h
  #      applications:
  #      - '*-prod'
  #      manualSync: true
  #    signatureKeys:
  #    - keyID: ABCDEF1234567890
  #    sourceNamespaces:
  #    - argocd

  # -- Deploy Argo CD ApplicationSets within this helm release
  # @default -- `{}` (See [values.yaml])
  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/
  applicationsets:
    {%- for service in cookiecutter.services.list %}
    {{ service.name }}:
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      finalizers:
        - resources-finalizer.argocd.argoproj.io
      # See PR #10026 (ArgoCD v2.5 or later)
      # goTemplate: false
      generators:
        - matrix:
            generators:
              - clusters: {}
              - git:
                  repoURL: https://github.com/Squallium/kubernetes-at-home.git
                  revision: main
                  files:
                    - path: 'apps/{{ service.name }}/{{'{{'}}metadata.labels.environment}}/values.yaml'
      # Ref https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Controlling-Resource-Modification/#allow-temporarily-toggling-auto-sync
      ignoreApplicationDifferences:
        - jsonPointers:
            - /spec/syncPolicy
      # Progressive Syncs is an experimental feature and it must be explicitly enabled
      # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
      #      strategy:
      #        type: RollingSync
      #        rollingSync:
      #          steps:
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - guestbook
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - kustomize-foo
      #              - kustomize-bar
      template:
        metadata:
          name: '{{ service.name }}-{{'{{'}}metadata.labels.environment}}'
          labels:
            type: 'service'
          annotations: {}
        spec:
          project: default
          sources:
            - repoURL: https://github.com/Squallium/kubernetes-at-home.git
              targetRevision: main
              ref: values
            - repoURL: {{ service.chart_repo_url | default(cookiecutter.default_chart_repo_url) }}
              {%- if service.chart_name | default(cookiecutter.default_chart_name) %}
              chart: {{ service.chart_name  }}
              {%- else %}
              path: charts/{{ service.name }}
              {%- endif %}
              targetRevision: {{ service.chart_target_revision | default(cookiecutter.default_chart_target_revision) }}
              helm:
                valueFiles:
                  - $values/apps/{{ service.name }}/{{'{{'}}metadata.labels.environment}}/values.yaml
          destination:
            server: '{{'{{'}}server}}'
            namespace: {{ service.name }}
          syncPolicy:
            automated:
              prune: false
              selfHeal: false
            syncOptions:
              - CreateNamespace=true
          ignoreDifferences:
            - group: apps
              kind: Deployment
              jsonPointers:
                - /spec/replicas
          info:
            - name: url
              value: https://argoproj.github.io/
      syncPolicy:
        # Set Application finalizer
        preserveResourcesOnDeletion: false
      # Templating is only available on string type
    #      templatePatch: |
    #        spec:
    #          source:
    #            helm:
    #              valueFiles:
    #              {{'{{'}}- range $valueFile := .valueFiles }}
    #                - {{'{{'}} $valueFile }}
    #              {{'{{'}}- end }}
    #        {{'{{'}}- if .autoSync }}
    #          syncPolicy:
    #            automated:
    #              prune: {{'{{'}} .prune }}
    #        {{'{{'}}- end }}
    {%- endfor %}
    {%- for service_config in cookiecutter.services_config.list %}
    {{ service_config.name }}-config:
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      finalizers:
        - resources-finalizer.argocd.argoproj.io
      # See PR #10026 (ArgoCD v2.5 or later)
      # goTemplate: false
      generators:
        - matrix:
            generators:
              - clusters: {}
              - git:
                  repoURL: https://github.com/Squallium/kubernetes-at-home.git
                  revision: main
                  files:
                    - path: 'apps/{{ service_config.name }}/config/{{'{{'}}metadata.labels.environment}}/values.yaml'
      # Ref https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Controlling-Resource-Modification/#allow-temporarily-toggling-auto-sync
      ignoreApplicationDifferences:
        - jsonPointers:
            - /spec/syncPolicy
      # Progressive Syncs is an experimental feature and it must be explicitly enabled
      # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
      #      strategy:
      #        type: RollingSync
      #        rollingSync:
      #          steps:
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - guestbook
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - kustomize-foo
      #              - kustomize-bar
      template:
        metadata:
          name: '{{ service_config.name }}-config-{{'{{'}}metadata.labels.environment}}'
          labels:
            type: 'service-config'
          annotations: {}
        spec:
          project: default
          sources:
            - repoURL: https://github.com/Squallium/kubernetes-at-home.git
              targetRevision: main
              ref: values
            - repoURL: {{ service_config.chart_repo_url | default(cookiecutter.default_chart_repo_url) }}
              {%- if service_config.chart_name | default(cookiecutter.default_chart_name) %}
              chart: {{ service_config.chart_name  }}
              {%- else %}
              path: charts/{{ service_config.name }}-config
              {%- endif %}
              targetRevision: {{ service_config.chart_target_revision | default(cookiecutter.default_chart_target_revision) }}
              helm:
                valueFiles:
                  - $values/apps/{{ service_config.name }}/config/{{'{{'}}metadata.labels.environment}}/values.yaml
          destination:
            server: '{{'{{'}}server}}'
            namespace: {{ service_config.name }}
          syncPolicy:
            automated:
              prune: false
              selfHeal: false
            syncOptions:
              - CreateNamespace=true
          ignoreDifferences:
            - group: apps
              kind: Deployment
              jsonPointers:
                - /spec/replicas
          info:
            - name: url
              value: https://argoproj.github.io/
      syncPolicy:
        # Set Application finalizer
        preserveResourcesOnDeletion: false
      # Templating is only available on string type
    #      templatePatch: |
    #        spec:
    #          source:
    #            helm:
    #              valueFiles:
    #              {{'{{'}}- range $valueFile := .valueFiles }}
    #                - {{'{{'}} $valueFile }}
    #              {{'{{'}}- end }}
    #        {{'{{'}}- if .autoSync }}
    #          syncPolicy:
    #            automated:
    #              prune: {{'{{'}} .prune }}
    #        {{'{{'}}- end }}
    {%- endfor %}
    {%- for app_of_app in cookiecutter.app_of_apps.list %}
    {{ app_of_app.name }}:
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      finalizers:
        - resources-finalizer.argocd.argoproj.io
      # See PR #10026 (ArgoCD v2.5 or later)
      # goTemplate: false
      generators:
        - matrix:
            generators:
              - clusters:
                  selector:
                    matchLabels:
                      name: "in-cluster"
              - git:
                  repoURL: https://github.com/Squallium/kubernetes-at-home.git
                  revision: main
                  files:
                    - path: 'apps/{{ app_of_app.name }}/{{'{{'}}metadata.labels.name}}/values.yaml'
      # Ref https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Controlling-Resource-Modification/#allow-temporarily-toggling-auto-sync
      ignoreApplicationDifferences:
        - jsonPointers:
            - /spec/syncPolicy
      # Progressive Syncs is an experimental feature and it must be explicitly enabled
      # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
      #      strategy:
      #        type: RollingSync
      #        rollingSync:
      #          steps:
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - guestbook
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - kustomize-foo
      #              - kustomize-bar
      template:
        metadata:
          name: '{{ app_of_app.name }}-{{'{{'}}metadata.labels.name}}'
          labels:
            type: 'service-config'
          annotations: {}
        spec:
          project: default
          sources:
            - repoURL: https://github.com/Squallium/kubernetes-at-home.git
              targetRevision: main
              ref: values
            - repoURL: {{ app_of_app.chart_repo_url | default(cookiecutter.default_chart_repo_url) }}
              {%- if app_of_app.chart_name | default(cookiecutter.default_chart_name) %}
              chart: {{ app_of_app.chart_name  }}
              {%- else %}
              path: charts/{{ app_of_app.name }}
              {%- endif %}
              targetRevision: {{ app_of_app.chart_target_revision | default(cookiecutter.default_chart_target_revision) }}
              helm:
                valueFiles:
                  - $values/apps/{{ app_of_app.name }}/{{'{{'}}metadata.labels.name}}/values.yaml
          destination:
            server: '{{'{{'}}server}}'
            namespace: argocd
          syncPolicy:
            automated:
              prune: false
              selfHeal: false
            syncOptions:
              - CreateNamespace=true
          ignoreDifferences:
            - group: apps
              kind: Deployment
              jsonPointers:
                - /spec/replicas
          info:
            - name: url
              value: https://argoproj.github.io/
      syncPolicy:
        # Set Application finalizer
        preserveResourcesOnDeletion: false
      # Templating is only available on string type
    #      templatePatch: |
    #        spec:
    #          source:
    #            helm:
    #              valueFiles:
    #              {{'{{'}}- range $valueFile := .valueFiles }}
    #                - {{'{{'}} $valueFile }}
    #              {{'{{'}}- end }}
    #        {{'{{'}}- if .autoSync }}
    #          syncPolicy:
    #            automated:
    #              prune: {{'{{'}} .prune }}
    #        {{'{{'}}- end }}
    {%- endfor %}
  #    adguard-home:
  #      namespace: argocd
  #      additionalLabels: {}
  #      additionalAnnotations: {}
  #      finalizers:
  #      - resources-finalizer.argocd.argoproj.io
  #      # See PR #10026 (ArgoCD v2.5 or later)
  #      # goTemplate: false
  #      generators:
  #        - matrix:
  #            generators:
  #              - clusters: {}
  #              - git:
  #                  repoURL: https://github.com/Squallium/kubernetes-at-home.git
  #                  revision: feature/adguard-home-configuration
  #                  files:
  #                    - path: 'apps/adguard-home/{{'{{'}}metadata.labels.environment}}/values.yaml'
  #      # Ref https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Controlling-Resource-Modification/#allow-temporarily-toggling-auto-sync
  #      ignoreApplicationDifferences:
  #      - jsonPointers:
  #        - /spec/syncPolicy
  #      # Progressive Syncs is an experimental feature and it must be explicitly enabled
  #      # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
  ##      strategy:
  ##        type: RollingSync
  ##        rollingSync:
  ##          steps:
  ##          - matchExpressions:
  ##            - key: project
  ##              operator: In
  ##              values:
  ##              - guestbook
  ##          - matchExpressions:
  ##            - key: project
  ##              operator: In
  ##              values:
  ##              - kustomize-foo
  ##              - kustomize-bar
  #      template:
  #        metadata:
  #          name: 'adguard-home-{{'{{'}}metadata.labels.environment}}'
  #          labels:
  #            type: 'service'
  #          annotations: {}
  #        spec:
  #          project: default
  #          sources:
  #          - repoURL: https://github.com/Squallium/kubernetes-at-home.git
  #            targetRevision: feature/adguard-home-configuration
  #            ref: values
  #          - repoURL: https://github.com/Squallium/kubernetes-at-home.git
  #            path: charts/adguard-home
  #            targetRevision: feature/adguard-home-configuration
  #            helm:
  #              valueFiles:
  #                - $values/apps/adguard-home/{{'{{'}}metadata.labels.environment}}/values.yaml
  #          destination:
  #            server: '{{'{{'}}server}}'
  #            namespace: adguard-home
  #          syncPolicy:
  #            automated:
  #              prune: false
  #              selfHeal: false
  #            syncOptions:
  #              - CreateNamespace=true
  #          ignoreDifferences:
  #          - group: apps
  #            kind: Deployment
  #            jsonPointers:
  #            - /spec/replicas
  #          info:
  #          - name: url
  #            value: https://argoproj.github.io/
  #      syncPolicy:
  #        # Set Application finalizer
  #        preserveResourcesOnDeletion: false
  #      # Templating is only available on string type
  ##      templatePatch: |
  ##        spec:
  ##          source:
  ##            helm:
  ##              valueFiles:
  ##              {{'{{'}}- range $valueFile := .valueFiles }}
  ##                - {{'{{'}} $valueFile }}
  ##              {{'{{'}}- end }}
  ##        {{'{{'}}- if .autoSync }}
  ##          syncPolicy:
  ##            automated:
  ##              prune: {{'{{'}} .prune }}
  ##        {{'{{'}}- end }}
  #  guestbook:
  #    namespace: argocd
  #    additionalLabels: {}
  #    additionalAnnotations: {}
  #    finalizers:
  #    - resources-finalizer.argocd.argoproj.io
  #    # See PR #10026 (ArgoCD v2.5 or later)
  #    # goTemplate: false
  #    generators:
  #    - git:
  #        repoURL: https://github.com/argoproj/argocd-example-apps.git
  #        revision: HEAD
  #        directories:
  #        - path: guestbook
  #        - path: kustomize-*
  #    # Ref https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Controlling-Resource-Modification/#allow-temporarily-toggling-auto-sync
  #    ignoreApplicationDifferences:
  #    - jsonPointers:
  #      - /spec/syncPolicy
  #    # Progressive Syncs is an experimental feature and it must be explicitly enabled
  #    # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
  #    strategy:
  #      type: RollingSync
  #      rollingSync:
  #        steps:
  #        - matchExpressions:
  #          - key: project
  #            operator: In
  #            values:
  #            - guestbook
  #        - matchExpressions:
  #          - key: project
  #            operator: In
  #            values:
  #            - kustomize-foo
  #            - kustomize-bar
  #    template:
  #      metadata:
  #        name: '{{'{{'}}path.basename}}'
  #        labels:
  #          project: '{{'{{'}}path.basename}}'
  #        annotations: {}
  #      spec:
  #        project: default
  #        source:
  #          repoURL: https://github.com/argoproj/argocd-example-apps.git
  #          targetRevision: HEAD
  #          path: '{{'{{'}}path}}'
  #        destination:
  #          server: https://kubernetes.default.svc
  #          namespace: default
  #        syncPolicy:
  #          automated:
  #            prune: false
  #            selfHeal: false
  #        ignoreDifferences:
  #        - group: apps
  #          kind: Deployment
  #          jsonPointers:
  #          - /spec/replicas
  #        info:
  #        - name: url
  #          value: https://argoproj.github.io/
  #    syncPolicy:
  #      # Set Application finalizer
  #      preserveResourcesOnDeletion: false
  #    # Templating is only available on string type
  #    templatePatch: |
  #      spec:
  #        source:
  #          helm:
  #            valueFiles:
  #            {{'{{'}}- range $valueFile := .valueFiles }}
  #              - {{'{{'}} $valueFile }}
  #            {{'{{'}}- end }}
  #      {{'{{'}}- if .autoSync }}
  #        syncPolicy:
  #          automated:
  #            prune: {{'{{'}} .prune }}
  #      {{'{{'}}- end }}

  # --  Deploy Argo CD Applications/ApplicationSets/Projects within this helm release
  # @default -- `[]` (See [values.yaml])
  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/
  itemTemplates: []
  # - items:
  #     - name: my-appset
  #       generators: &generators
  #         - list:
  #             elements:
  #               - cluster: engineering-dev
  #                 url: https://1.2.3.4
  #               - cluster: engineering-prod
  #                 url: https://2.4.6.8
  #               - cluster: finance-preprod
  #                 url: https://9.8.7.6
  #   template:
  #     apiVersion: argoproj.io/v1alpha1
  #     kind: ApplicationSet
  #     metadata:
  #       name: "{{'{{'}} .name }}"
  #     spec:
  #       generators: *generators
  #       template:
  #         metadata:
  #           name: "{{'{{'}}`{{'{{'}}cluster}}`}}-guestbook"
  #         spec:
  #           project: my-project
  #           source:
  #             repoURL: https://github.com/infra-team/cluster-deployments.git
  #             targetRevision: HEAD
  #             path: guestbook/{{'{{'}}`{{'{{'}}cluster}}`}}
  #           destination:
  #             server: "{{'{{'}}`{{'{{'}}cluster}}`}}"
  #             namespace: guestbook
  # - items:
  #     - name: my-appset
  #       generators:
  #         - list:
  #             elements:
  #               - cluster: engineering-dev
  #                 url: https://1.2.3.4
  #               - cluster: engineering-prod
  #                 url: https://2.4.6.8
  #               - cluster: finance-preprod
  #                 url: https://9.8.7.6
  #   template: |-
  #     apiVersion: argoproj.io/v1alpha1
  #     kind: ApplicationSet
  #     metadata:
  #       name: {{'{{'}} .name }}
  #     spec:
  #       generators: {{'{{'}} toYaml .generators | nindent 4 }}
  #       template:
  #         metadata:
  #           name: '{{'{{'}}`{{'{{'}}cluster}}`}}-guestbook'
  #         spec:
  #           project: my-project
  #           source:
  #             repoURL: https://github.com/infra-team/cluster-deployments.git
  #             targetRevision: HEAD
  #             path: guestbook/{{'{{'}}`{{'{{'}}cluster}}`}}
  #           destination:
  #             server: '{{'{{'}}`{{'{{'}}cluster}}`}}'
  #             namespace: guestbook

  # -- DEPRECATED - Please refer [Deprecation Notice](https://github.com/argoproj-labs/argocd-extensions?tab=readme-ov-file#deprecation-notice) for more info.
  # @default -- `{}` (See [values.yaml])
  ## This function in tech preview stage, do expect unstability or breaking changes in newer versions. Bump image.tag if necessary.
  ## Ref: https://github.com/argoproj-labs/argocd-extensions
  extensions: {}
  #  example:
  #    namespace: argocd
  #    additionalLabels: {}
  #    additionalAnnotations: {}
  #    sources:
  #      - git:
  #          url: https://github.com/argoproj-labs/argocd-example-extension.git
  #      - web:
  #          url: https://github.com/argoproj-labs/argocd-example-extension/releases/download/v0.1.0/extension.tar
