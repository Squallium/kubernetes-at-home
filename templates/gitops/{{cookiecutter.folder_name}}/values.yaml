argocd-apps:
  # -- Deploy Argo CD Applications within this helm release
  # @default -- `{}` (See [values.yaml])
  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/
  applications:
    {%- for app_of_apps in cookiecutter.apps_of_apps.list %}
    {{ app_of_apps.name }}:
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      finalizers:
      - resources-finalizer.argocd.argoproj.io
      project: default
      sources:
      - repoURL: https://github.com/Squallium/kubernetes-at-home.git
        targetRevision: main
        ref: values
      - repoURL: https://argoproj.github.io/argo-helm
        chart: argocd-apps
        targetRevision: 2.0.2
        helm:
          valueFiles:
            - $values/gitops/values-{{ app_of_apps.name }}.yaml
      destination:
        server: https://kubernetes.default.svc
        namespace: argocd
      syncPolicy:
  #      automated:
  #        prune: false
  #        selfHeal: false
        syncOptions:
        - CreateNamespace=true
      revisionHistoryLimit: null
      ignoreDifferences:
      - group: apps
        kind: Deployment
        jsonPointers:
        - /spec/replicas
      info:
      - name: url
        value: https://argoproj.github.io/
    {%- endfor %}
    {%- for service_addons in cookiecutter.services_addons.list %}
    {{ service_addons.name }}:
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      finalizers:
      - resources-finalizer.argocd.argoproj.io
      project: default
      sources:
      - repoURL: https://github.com/Squallium/kubernetes-at-home.git
        targetRevision: main
        ref: values
      - repoURL: https://github.com/Squallium/kubernetes-at-home.git
        path: charts/{{ service_addons.name }}
        targetRevision: main
        helm:
          valueFiles:
            - $values/apps/{{ service_addons.name }}/values.yaml
      destination:
        server: https://kubernetes.default.svc
        namespace: argocd
      syncPolicy:
  #      automated:
  #        prune: false
  #        selfHeal: false
        syncOptions:
        - CreateNamespace=true
      revisionHistoryLimit: null
      ignoreDifferences:
      - group: apps
        kind: Deployment
        jsonPointers:
        - /spec/replicas
      info:
      - name: url
        value: https://argoproj.github.io/
    {%- endfor %}

  # -- Deploy Argo CD Projects within this helm release
  # @default -- `{}` (See [values.yaml])
  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/
  projects:
  {%- for project in cookiecutter.projects.list %}
    {{ project.name }}:
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      permitOnlyProjectScopedClusters: false
      finalizers:
      - resources-finalizer.argocd.argoproj.io
      description: {{ project.description | default("Project for " + project.name) }}
      sourceRepos:
      - '*'
      destinations:
      - namespace: guestbook
        server: https://kubernetes.default.svc
      clusterResourceWhitelist: []
      clusterResourceBlacklist: []
      namespaceResourceBlacklist: {}
#      - group: ''
#        kind: ResourceQuota
#      - group: ''
#        kind: LimitRange
#      - group: ''
#        kind: NetworkPolicy
#        orphanedResources: {}
#        roles: []
      namespaceResourceWhitelist: {}
#      - group: 'apps'
#        kind: Deployment
#      - group: 'apps'
#        kind: StatefulSet
      orphanedResources: {}
      roles: []
      syncWindows: {}
#      - kind: allow
#        schedule: '10 1 * * *'
#        duration: 1h
#        applications:
#        - '*-prod'
#        manualSync: true
      signatureKeys:
      - keyID: ABCDEF1234567890
      sourceNamespaces:
      - argocd
  {%- endfor %}

  # -- Deploy Argo CD ApplicationSets within this helm release
  # @default -- `{}` (See [values.yaml])
  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/
  applicationsets:
    {%- for service in cookiecutter.services.list %}
    {{ service.name }}:
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      finalizers:
        - resources-finalizer.argocd.argoproj.io
      # See PR #10026 (ArgoCD v2.5 or later)
      # goTemplate: false
      generators:
        - matrix:
            generators:
              - clusters: {}
              - git:
                  repoURL: https://github.com/Squallium/kubernetes-at-home.git
                  revision: main
                  files:
                    - path: 'apps/{{ service.name }}/{{'{{'}}metadata.labels.environment}}/values.yaml'
      # Ref https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Controlling-Resource-Modification/#allow-temporarily-toggling-auto-sync
      ignoreApplicationDifferences:
        - jsonPointers:
            - /spec/syncPolicy
      # Progressive Syncs is an experimental feature and it must be explicitly enabled
      # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
      #      strategy:
      #        type: RollingSync
      #        rollingSync:
      #          steps:
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - guestbook
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - kustomize-foo
      #              - kustomize-bar
      template:
        metadata:
          name: '{{ service.name }}-{{'{{'}}metadata.labels.environment}}'
          labels:
            type: 'service'
          annotations: {}
        spec:
          project: default
          sources:
            - repoURL: https://github.com/Squallium/kubernetes-at-home.git
              targetRevision: main
              ref: values
            {%- if service.chart_name | default(cookiecutter.default_chart_name) %}
            - repoURL: {{ service.chart_repo | default(cookiecutter.default_chart_repo) }}
              chart: {{ service.chart_name  }}
            {%- else %}
            - repoURL: {{ service.chart_repo_url | default(cookiecutter.default_chart_repo_url) }}
              path: charts/{{ service.name }}
            {%- endif %}
              targetRevision: {{ service.chart_target_revision | default(cookiecutter.default_chart_target_revision) }}
              helm:
                valueFiles:
                  - $values/apps/{{ service.name }}/values.yaml
                  - $values/apps/{{ service.name }}/{{'{{'}}metadata.labels.environment}}/values.yaml
                  {%- if service.get("enable_ssl", False) %}
                  - $values/apps/{{ service.name }}/{{'{{'}}metadata.labels.environment}}/values-ssl.yaml
                  {%- endif %}
          destination:
            server: '{{'{{'}}server}}'
            namespace: {{ service.name }}
          syncPolicy:
#            automated:
#              prune: false
#              selfHeal: false
            syncOptions:
              - CreateNamespace=true
          ignoreDifferences:
            - group: apps
              kind: Deployment
              jsonPointers:
                - /spec/replicas
          info:
            - name: url
              value: https://argoproj.github.io/
      syncPolicy:
        # Set Application finalizer
        preserveResourcesOnDeletion: true
      # Templating is only available on string type
    #      templatePatch: |
    #        spec:
    #          source:
    #            helm:
    #              valueFiles:
    #              {{'{{'}}- range $valueFile := .valueFiles }}
    #                - {{'{{'}} $valueFile }}
    #              {{'{{'}}- end }}
    #        {{'{{'}}- if .autoSync }}
    #          syncPolicy:
    #            automated:
    #              prune: {{'{{'}} .prune }}
    #        {{'{{'}}- end }}
    {%- endfor %}
    {%- for service_config in cookiecutter.services_config.list %}
    {{ service_config.name }}-config:
      namespace: argocd
      additionalLabels: {}
      additionalAnnotations: {}
      finalizers:
        - resources-finalizer.argocd.argoproj.io
      # See PR #10026 (ArgoCD v2.5 or later)
      # goTemplate: false
      generators:
        - matrix:
            generators:
              - clusters: {}
              - git:
                  repoURL: https://github.com/Squallium/kubernetes-at-home.git
                  revision: main
                  files:
                    - path: 'apps/{{ service_config.name }}/config/{{'{{'}}metadata.labels.environment}}/values.yaml'
      # Ref https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Controlling-Resource-Modification/#allow-temporarily-toggling-auto-sync
      ignoreApplicationDifferences:
        - jsonPointers:
            - /spec/syncPolicy
      # Progressive Syncs is an experimental feature and it must be explicitly enabled
      # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Progressive-Syncs/#enabling-progressive-syncs
      #      strategy:
      #        type: RollingSync
      #        rollingSync:
      #          steps:
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - guestbook
      #          - matchExpressions:
      #            - key: project
      #              operator: In
      #              values:
      #              - kustomize-foo
      #              - kustomize-bar
      template:
        metadata:
          name: '{{ service_config.name }}-config-{{'{{'}}metadata.labels.environment}}'
          labels:
            type: 'service-config'
          annotations: {}
        spec:
          project: default
          sources:
            - repoURL: https://github.com/Squallium/kubernetes-at-home.git
              targetRevision: main
              ref: values
            {%- if service_config.chart_name | default(cookiecutter.default_chart_name) %}
            - repoURL: {{ service_config.chart_repo | default(cookiecutter.default_chart_repo) }}
              chart: {{ service_config.chart_name  }}
            {%- else %}
            - repoURL: {{ service_config.chart_repo_url | default(cookiecutter.default_chart_repo_url) }}
              path: charts/{{ service_config.name }}
            {%- endif %}
              targetRevision: {{ service_config.chart_target_revision | default(cookiecutter.default_chart_target_revision) }}
              helm:
                valueFiles:
                  - $values/apps/{{ service_config.name }}/config/values.yaml
                  - $values/apps/{{ service_config.name }}/config/{{'{{'}}metadata.labels.environment}}/values.yaml
          destination:
            server: '{{'{{'}}server}}'
            namespace: {{ service_config.name }}
          syncPolicy:
#            automated:
#              prune: false
#              selfHeal: false
            syncOptions:
              - CreateNamespace=true
          ignoreDifferences:
            - group: apps
              kind: Deployment
              jsonPointers:
                - /spec/replicas
          info:
            - name: url
              value: https://argoproj.github.io/
      syncPolicy:
        # Set Application finalizer
        preserveResourcesOnDeletion: true
      # Templating is only available on string type
    #      templatePatch: |
    #        spec:
    #          source:
    #            helm:
    #              valueFiles:
    #              {{'{{'}}- range $valueFile := .valueFiles }}
    #                - {{'{{'}} $valueFile }}
    #              {{'{{'}}- end }}
    #        {{'{{'}}- if .autoSync }}
    #          syncPolicy:
    #            automated:
    #              prune: {{'{{'}} .prune }}
    #        {{'{{'}}- end }}
    {%- endfor %}

  # --  Deploy Argo CD Applications/ApplicationSets/Projects within this helm release
  # @default -- `[]` (See [values.yaml])
  ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/
  itemTemplates: []
  # - items:
  #     - name: my-appset
  #       generators: &generators
  #         - list:
  #             elements:
  #               - cluster: engineering-dev
  #                 url: https://1.2.3.4
  #               - cluster: engineering-prod
  #                 url: https://2.4.6.8
  #               - cluster: finance-preprod
  #                 url: https://9.8.7.6
  #   template:
  #     apiVersion: argoproj.io/v1alpha1
  #     kind: ApplicationSet
  #     metadata:
  #       name: "{{'{{'}} .name }}"
  #     spec:
  #       generators: *generators
  #       template:
  #         metadata:
  #           name: "{{'{{'}}`{{'{{'}}cluster}}`}}-guestbook"
  #         spec:
  #           project: my-project
  #           source:
  #             repoURL: https://github.com/infra-team/cluster-deployments.git
  #             targetRevision: HEAD
  #             path: guestbook/{{'{{'}}`{{'{{'}}cluster}}`}}
  #           destination:
  #             server: "{{'{{'}}`{{'{{'}}cluster}}`}}"
  #             namespace: guestbook
  # - items:
  #     - name: my-appset
  #       generators:
  #         - list:
  #             elements:
  #               - cluster: engineering-dev
  #                 url: https://1.2.3.4
  #               - cluster: engineering-prod
  #                 url: https://2.4.6.8
  #               - cluster: finance-preprod
  #                 url: https://9.8.7.6
  #   template: |-
  #     apiVersion: argoproj.io/v1alpha1
  #     kind: ApplicationSet
  #     metadata:
  #       name: {{'{{'}} .name }}
  #     spec:
  #       generators: {{'{{'}} toYaml .generators | nindent 4 }}
  #       template:
  #         metadata:
  #           name: '{{'{{'}}`{{'{{'}}cluster}}`}}-guestbook'
  #         spec:
  #           project: my-project
  #           source:
  #             repoURL: https://github.com/infra-team/cluster-deployments.git
  #             targetRevision: HEAD
  #             path: guestbook/{{'{{'}}`{{'{{'}}cluster}}`}}
  #           destination:
  #             server: '{{'{{'}}`{{'{{'}}cluster}}`}}'
  #             namespace: guestbook

  # -- DEPRECATED - Please refer [Deprecation Notice](https://github.com/argoproj-labs/argocd-extensions?tab=readme-ov-file#deprecation-notice) for more info.
  # @default -- `{}` (See [values.yaml])
  ## This function in tech preview stage, do expect unstability or breaking changes in newer versions. Bump image.tag if necessary.
  ## Ref: https://github.com/argoproj-labs/argocd-extensions
  extensions: {}
  #  example:
  #    namespace: argocd
  #    additionalLabels: {}
  #    additionalAnnotations: {}
  #    sources:
  #      - git:
  #          url: https://github.com/argoproj-labs/argocd-example-extension.git
  #      - web:
  #          url: https://github.com/argoproj-labs/argocd-example-extension/releases/download/v0.1.0/extension.tar
